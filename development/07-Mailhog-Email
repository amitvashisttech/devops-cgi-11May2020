node('master') {
    notify('Started')
    
    def project_path= "01-Jenkins/petclinic-code"
    
    stage('GitCodeCheckout') {
    
    git branch: 'development', url: 'https://github.com/amitvashisttech/devops-cgi-11May2020.git'
    }
    
    dir(project_path) {
    stage('MavenClean') {
    sh label: '', script: 'mvn clean'
    }
    
    stage('Maven-Compile') {
    sh label: '', script: 'mvn compile'
    }
    
    stage('Maven-Test') {
    sh label: '', script: 'mvn test'
    }
    
    stage('Maven-Package') {
    sh label: '', script: 'mvn package'
    }
    
    stage('Code-Coverage') {
    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site/jacoco/', reportFiles: 'index.html', reportName: 'Code Covrage HTML Report', reportTitles: ''])
    }
    
    stage('Publish-Test') {
    junit allowEmptyResults: true, testResults: 'target/surefire-reports/TEST-*.xml'
    }
    
    stage('Archive Artifact') {
    archive 'target/petclinic.war' 
    }
    
    stage('Deployment-Stage-Docker-Env') {
    sh label: '', script: 'docker-compose up -d --build'
    }
  }
  notify('Completed')
}

def notify(status){
    emailext ( 
        to: 'amitvashist7@outlook.com',
        subject: "${status}:  Job \'${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
        body: """<p>Check console out at <a href=\'${env.BUILD_URL}\'> ${env.JOB_NAME} [${env.BUILD_NUMBER}]</a></p>""", 
        )
}
